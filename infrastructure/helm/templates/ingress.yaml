{{- $releaseName := .Release.Name }}
{{- $snowStormApiPath := .Values.snomio.snowstorm.apiPath }}
{{- $defaultBranch := .Values.snomio.snowstorm.defaultBranch }}
{{- $authoringServices := index .Values.snomio.config "ihtsdo.ap.api.url" }}
{{- $snowstormHost := $.Values.snomio.snowstorm.host }}
{{- $snowstormPort := $.Values.snomio.snowstorm.port }}
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-ingress
  annotations:
    {{- if .Values.certmanager.enabled }}
    cert-manager.io/cluster-issuer: letsencrypt
    cert-manager.io/issue-temporary-certificate: "true" # temporary cert required for nginx to be able to reload
    acme.cert-manager.io/http01-edit-in-place: "true" # important to merge with existing ingress resource into a single nginx config file
    {{- end }}
    nginx.org/proxy-connect-timeout: "300s"
    nginx.org/proxy-read-timeout: "300s"
    nginx.org/redirect-to-https: "{{ .Values.ingress.nginx.sslRedirect }}"
    ingress.kubernetes.io/ssl-redirect: "{{ .Values.ingress.nginx.sslRedirect }}"
    nginx.org/server-snippets: |
        rewrite ^/api/branch/(.*)  /api/{{ $defaultBranch }}/$1 last;
        location /authoring-services/ {
            proxy_set_header Upgrade $http_upgrade;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_socket_keepalive on;
            proxy_set_header Host $host;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
            proxy_pass {{ $authoringServices }}/;
        }
spec:
  ingressClassName:  {{ .Values.ingress.class }}
  tls:
    - hosts:
    {{- range.Values.snomio.hostNames }}
        - {{. }}
    {{- end }}
      secretName: {{ .Values.ingress.tlsSecretName }}
  rules:
    {{- range.Values.snomio.hostNames }}
    - host: {{ . }}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ $releaseName }}-service
                port:
                  number: 80
          - path: /snowstorm
            pathType: Prefix
            backend:
              service:
                name: snowstorm-service # change to values snomio snowstorm namespace later along with other hardcoded values
                port:
                  number: {{ $snowstormPort }}
    {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: snowstorm-service
spec:
  type: ExternalName
  externalName: {{ $snowstormHost }}
  ports:
    - port: {{ $snowstormPort }}