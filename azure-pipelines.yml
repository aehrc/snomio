name: snomio-$(Date:yyyyMMdd)$(Rev:.r)_$(SourceBranchName)

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  mavenCache: $(Pipeline.Workspace)/.m2/repository
  mavenOptions: '-Dmaven.repo.local=$(mavenCache) -Dmaven.settings.security=never'

steps:

  - task: Docker@2
    displayName: 'Login to ACR'
    inputs:
      command: login
      containerRegistry: $(containerRegistry)

  - task: Cache@2
    displayName: Cache Maven local repo
    inputs:
      key: 'maven | "$(Agent.OS)" | **/pom.xml'
      restoreKeys: |
        maven | "$(Agent.OS)"
        maven
      path: $(mavenCache)

  - task: Cache@2
    displayName: Cache node_modules
    inputs:
      key: 'npm | "$(Agent.OS)" | $(Build.SourcesDirectory)/ui/package-lock.json'
      path: $(Build.SourcesDirectory)/ui/node_modules
      cacheHitVar: CACHE_RESTORED

  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      options: '-Ddocker.registry.host=$(dockerRegistry) -Ddocker.repository=$(dockerRepository) -Djib.to.tags=$(Build.BuildNumber) -DargLine="-Dims-username=$(imsUsername) -Dims-password=$(imsPassword)"'
      mavenOptions: '-Xmx3072m -Dims-username=$(imsUsername) -Dims-password=$(imsPassword)'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.17'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'

  - task: PublishTestResults@2
    displayName: Publish Vitest Results
    inputs:
      testRunTitle: Snomio-vitest-$(Date:yyyyMMdd)$(Rev:.r)_$(SourceBranchName)
      testRunner: Junit
      testResultsFiles: 'ui/reports/*.xml'
      failTaskOnFailedTests: true

  - task: PublishCodeCoverageResults@1
    displayName: Publish Code Coverage
    inputs:
      enabled: true
      codeCoverageTool: 'JaCoCo'
      summaryFileLocation: '**/target/site/jacoco/jacoco.xml'
      reportDirectory: '**/target/site/jacoco'
      additionalCodeCoverageFiles: '**/target/jacoco.exec'

  - script: |
      sudo apt-get install rpm
      wget https://github.com/aquasecurity/trivy/releases/download/v0.44.0/trivy_0.44.0_Linux-64bit.deb
      sudo dpkg -i trivy_0.44.0_Linux-64bit.deb
      trivy -v
    displayName: 'Download and install Trivy'
  - task: CmdLine@2
    displayName: "Run trivy scan on snomio"
    inputs:
      script: |
        trivy image --exit-code 0 --severity LOW,MEDIUM --security-checks vuln --timeout 15m $(dockerRegistry)/$(dockerRepository):$(Build.BuildNumber)
        trivy image --exit-code 1 --severity HIGH,CRITICAL --security-checks vuln --timeout 15m $(dockerRegistry)/$(dockerRepository):$(Build.BuildNumber)

  - task: Docker@2
    condition: succeeded()
    displayName: push image
    inputs:
      containerRegistry: $(containerRegistry)
      repository: $(containerRepository)
      command: push
      tags: |
        $(Build.BuildNumber)

  - task: CmdLine@2
    displayName: Package Helm chart
    inputs:
      script: helm package --dependency-update --destination $(Build.ArtifactStagingDirectory) ./infrastructure/helm

  - publish: $(Build.ArtifactStagingDirectory)
    displayName: Publish Snomio Helm charts
    artifact: snomio-helm-charts
